{"ast":null,"code":"import _slicedToArray from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//회원가입(SignUp2)에서 년도를 선택할 때 드롭다운\nimport React,{useState}from'react';import'./DropdownComponent.css';// 별도의 CSS 파일을 임포트합니다.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DropdownComponent=function DropdownComponent(_ref){var onDateSelected=_ref.onDateSelected;var years=[];var months=Array.from({length:12},function(_,i){return i+1;});// 1월부터 12월까지의 배열 생성\nvar days=Array.from({length:31},function(_,i){return i+1;});// 1일부터 31일까지의 배열 생성\nvar startYear=1950;var currentYear=new Date().getFullYear();for(var i=startYear;i<=currentYear;i++){years.push(i);}var _useState=useState(''),_useState2=_slicedToArray(_useState,2),selectedYear=_useState2[0],setSelectedYear=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedMonth=_useState4[0],setSelectedMonth=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),selectedDay=_useState6[0],setSelectedDay=_useState6[1];var handleYearChange=function handleYearChange(e){setSelectedYear(e.target.value);onDateSelected(e.target.value,selectedMonth,selectedDay);};var handleMonthChange=function handleMonthChange(e){setSelectedMonth(e.target.value);onDateSelected(selectedYear,e.target.value,selectedDay);};var handleDayChange=function handleDayChange(e){setSelectedDay(e.target.value);onDateSelected(selectedYear,selectedMonth,e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"yearSelect\",children:\"\\uC0DD\\uB144\\uC6D4\\uC77C \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"yearSelect\",onChange:handleYearChange,value:selectedYear,className:\"custom-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uB144\\uB3C4\"}),years.map(function(year){return/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year);})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"monthSelect\",children:\" \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"monthSelect\",onChange:handleMonthChange,value:selectedMonth,className:\"custom-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC6D4\"}),months.map(function(month){return/*#__PURE__*/_jsx(\"option\",{value:month,children:month},month);})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"daySelect\",children:\" \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"daySelect\",onChange:handleDayChange,value:selectedDay,className:\"custom-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC77C\"}),days.map(function(day){return/*#__PURE__*/_jsx(\"option\",{value:day,children:day},day);})]})]});};export default DropdownComponent;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","DropdownComponent","_ref","onDateSelected","years","months","Array","from","length","_","i","days","startYear","currentYear","Date","getFullYear","push","_useState","_useState2","_slicedToArray","selectedYear","setSelectedYear","_useState3","_useState4","selectedMonth","setSelectedMonth","_useState5","_useState6","selectedDay","setSelectedDay","handleYearChange","e","target","value","handleMonthChange","handleDayChange","className","children","htmlFor","id","onChange","map","year","month","day"],"sources":["C:/Users/82102/Documents/GitHub/WAP-2/src/pages/DropdownComponent.js"],"sourcesContent":["//회원가입(SignUp2)에서 년도를 선택할 때 드롭다운\r\n\r\nimport React, { useState } from 'react';\r\nimport './DropdownComponent.css'; // 별도의 CSS 파일을 임포트합니다.\r\n\r\nconst DropdownComponent = ({onDateSelected}) => {\r\n    const years = [];\r\n    const months = Array.from({ length: 12 }, (_, i) => i + 1); // 1월부터 12월까지의 배열 생성\r\n    const days = Array.from({ length: 31 }, (_, i) => i + 1); // 1일부터 31일까지의 배열 생성\r\n    const startYear = 1950;\r\n    const currentYear = new Date().getFullYear();\r\n  \r\n    for (let i = startYear; i <= currentYear; i++) {\r\n      years.push(i);\r\n    }\r\n  \r\n    const [selectedYear, setSelectedYear] = useState('');\r\n    const [selectedMonth, setSelectedMonth] = useState('');\r\n    const [selectedDay, setSelectedDay] = useState('');\r\n  \r\n    const handleYearChange = (e) => {\r\n      setSelectedYear(e.target.value);\r\n      onDateSelected(e.target.value, selectedMonth,selectedDay);\r\n    };\r\n  \r\n    const handleMonthChange = (e) => {\r\n      setSelectedMonth(e.target.value);\r\n      onDateSelected(selectedYear, e.target.value, selectedDay);\r\n    };\r\n  \r\n    const handleDayChange = (e) => {\r\n      setSelectedDay(e.target.value);\r\n      onDateSelected(selectedYear, selectedMonth, e.target.value);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"dropdown-container\">\r\n        <label htmlFor=\"yearSelect\">생년월일 </label>\r\n        <select id=\"yearSelect\" onChange={handleYearChange} value={selectedYear} className=\"custom-dropdown\">\r\n          <option value=\"\">년도</option>\r\n          {years.map((year) => (\r\n            <option key={year} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n  \r\n        <label htmlFor=\"monthSelect\"> </label>\r\n        <select id=\"monthSelect\" onChange={handleMonthChange} value={selectedMonth} className=\"custom-dropdown\">\r\n          <option value=\"\">월</option>\r\n          {months.map((month) => (\r\n            <option key={month} value={month}>\r\n              {month}\r\n            </option>\r\n          ))}\r\n        </select>\r\n  \r\n        <label htmlFor=\"daySelect\"> </label>\r\n        <select id=\"daySelect\" onChange={handleDayChange} value={selectedDay} className=\"custom-dropdown\">\r\n          <option value=\"\">일</option>\r\n          {days.map((day) => (\r\n            <option key={day} value={day}>\r\n              {day}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        \r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default DropdownComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}