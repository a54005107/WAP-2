{"ast":null,"code":"import _toConsumableArray from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var FilterComponent=function FilterComponent(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showOptions=_useState2[0],setShowOptions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedRegions=_useState4[0],setSelectedRegions=_useState4[1];var regions=[\"남구\",\"수영구\",\"북구\",\"진구\"];// 여기에 필요한 지역구 목록을 추가하세요\nvar handleRegionClick=function handleRegionClick(){setShowOptions(!showOptions);};var handleRegionToggle=function handleRegionToggle(region){if(selectedRegions.includes(region)){setSelectedRegions(selectedRegions.filter(function(item){return item!==region;}));}else{setSelectedRegions([].concat(_toConsumableArray(selectedRegions),[region]));}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{border:'1px solid #ccc',padding:'10px',marginBottom:'10px',cursor:'pointer',display:'flex',justifyContent:'center'},onClick:handleRegionClick,children:[\"\\uC9C0\\uC5ED \",showOptions?'닫기':'열기']}),showOptions&&/*#__PURE__*/_jsxs(\"div\",{children:[regions.map(function(region){return/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:region,checked:selectedRegions.includes(region),onChange:function onChange(){return handleRegionToggle(region);}}),region]},region);}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC120\\uD0DD\\uB41C \\uC9C0\\uC5ED: \",selectedRegions.join(\", \")]})]})]});};export default FilterComponent;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","FilterComponent","_useState","_useState2","_slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selectedRegions","setSelectedRegions","regions","handleRegionClick","handleRegionToggle","region","includes","filter","item","concat","_toConsumableArray","children","style","border","padding","marginBottom","cursor","display","justifyContent","onClick","map","type","value","checked","onChange","join"],"sources":["C:/Users/82102/Documents/GitHub/WAP-2/src/pages/FilterComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FilterComponent = () => {\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [selectedRegions, setSelectedRegions] = useState([]);\r\n\r\n  const regions = [\"남구\", \"수영구\", \"북구\", \"진구\"]; // 여기에 필요한 지역구 목록을 추가하세요\r\n\r\n  const handleRegionClick = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  const handleRegionToggle = (region) => {\r\n    if (selectedRegions.includes(region)) {\r\n      setSelectedRegions(selectedRegions.filter((item) => item !== region));\r\n    } else {\r\n      setSelectedRegions([...selectedRegions, region]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '10px', cursor: 'pointer',display: 'flex', justifyContent: 'center'}} onClick={handleRegionClick}>\r\n        지역 {showOptions ? '닫기' : '열기'}\r\n      </div>\r\n      {showOptions && (\r\n        <div>\r\n          {regions.map((region) => (\r\n            <label key={region}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={region}\r\n                checked={selectedRegions.includes(region)}\r\n                onChange={() => handleRegionToggle(region)}\r\n              />\r\n              {region}\r\n            </label>\r\n          ))}\r\n          <p>선택된 지역: {selectedRegions.join(\", \")}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterComponent;"],"mappings":"8PAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAExC,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CAC5B,IAAAC,SAAA,CAAsCN,QAAQ,CAAC,KAAK,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA9CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAA8CX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnDE,eAAe,CAAAD,UAAA,IAAEE,kBAAkB,CAAAF,UAAA,IAE1C,GAAM,CAAAG,OAAO,CAAG,CAAC,IAAI,CAAE,KAAK,CAAE,IAAI,CAAE,IAAI,CAAC,CAAE;AAE3C,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9BN,cAAc,CAAC,CAACD,WAAW,CAAC,CAC9B,CAAC,CAED,GAAM,CAAAQ,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIC,MAAM,CAAK,CACrC,GAAIL,eAAe,CAACM,QAAQ,CAACD,MAAM,CAAC,CAAE,CACpCJ,kBAAkB,CAACD,eAAe,CAACO,MAAM,CAAC,SAACC,IAAI,QAAK,CAAAA,IAAI,GAAKH,MAAM,GAAC,CAAC,CACvE,CAAC,IAAM,CACLJ,kBAAkB,IAAAQ,MAAA,CAAAC,kBAAA,CAAKV,eAAe,GAAEK,MAAM,EAAC,CAAC,CAClD,CACF,CAAC,CAED,mBACEhB,KAAA,QAAAsB,QAAA,eACEtB,KAAA,QAAKuB,KAAK,CAAE,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,OAAO,CAAE,MAAM,CAAEC,YAAY,CAAE,MAAM,CAAEC,MAAM,CAAE,SAAS,CAACC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAE,CAACC,OAAO,CAAEhB,iBAAkB,CAAAQ,QAAA,EAAC,eACpK,CAACf,WAAW,CAAG,IAAI,CAAG,IAAI,EAC1B,CAAC,CACLA,WAAW,eACVP,KAAA,QAAAsB,QAAA,EACGT,OAAO,CAACkB,GAAG,CAAC,SAACf,MAAM,qBAClBhB,KAAA,UAAAsB,QAAA,eACEpB,IAAA,UACE8B,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEjB,MAAO,CACdkB,OAAO,CAAEvB,eAAe,CAACM,QAAQ,CAACD,MAAM,CAAE,CAC1CmB,QAAQ,CAAE,SAAAA,SAAA,QAAM,CAAApB,kBAAkB,CAACC,MAAM,CAAC,EAAC,CAC5C,CAAC,CACDA,MAAM,GAPGA,MAQL,CAAC,EACT,CAAC,cACFhB,KAAA,MAAAsB,QAAA,EAAG,mCAAQ,CAACX,eAAe,CAACyB,IAAI,CAAC,IAAI,CAAC,EAAI,CAAC,EACxC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}