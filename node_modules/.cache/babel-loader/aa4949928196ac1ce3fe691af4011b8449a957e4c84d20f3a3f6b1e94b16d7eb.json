{"ast":null,"code":"import _slicedToArray from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useState,useEffect}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PasswordChangeContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    padding-top: 10px;\\n    padding-bottom:20px;\\n    \"])));var PasswordInputContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    \"])));var PasswordInput=styled.input(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    margin-bottom: 10px;\\n    padding: 5px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    width: 15%;\\n    \"])));var ShowPasswordIcon=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    position: relative;\\n    top: -36.5px;\\n    left: 120px;\\n    cursor: pointer;\\n    font-size: 18px;\\n    color: #777;\\n    transition: color 0.3s;\\n\\n    &:hover {\\n    color: #488AEE;\\n    }\\n    \"])));var RequirementText=styled.p(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    font-size: 12px;\\n    color: #777;\\n    \"])));var SubmitButton=styled.button(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    background-color: #488AEE;\\n    color: #fff;\\n    border: none;\\n    padding: 10px 20px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    \"])));var PasswordChange=function PasswordChange(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newPassword=_useState4[0],setNewPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmNewPassword=_useState6[0],setConfirmNewPassword=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showPassword=_useState8[0],setShowPassword=_useState8[1];var handleSubmit=function handleSubmit(){// 등록 버튼을 눌렀을 때 처리하는 로직 추가\nalert('수정되었습니다.');};// const [userDataArray, setUserDataArray] = useState([]);\n//     useEffect(() => {\n//     const fetchData = () => {\n//         fetch('https://cors-anywhere.herokuapp.com/https://port-0-buife-5mk12alp6foaqx.sel5.cloudtype.app/members')\n//         .then(response => {\n//             if (!response.ok) {\n//             throw new Error('Network response was not ok');\n//             }\n//             return response.json();\n//         })\n//         .then(data => {\n//             console.log(`받아온 데이터:`, data); //정상 동작 확인 완료\n//             setUserDataArray(data); // 전체 데이터 배열을 가져옴\n//         })\n//         .catch(error => {\n//             console.error('Error fetching user data:', error);\n//         });\n//     };\n//     fetchData();\n//     }, []);\nreturn/*#__PURE__*/_jsxs(PasswordChangeContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"}),/*#__PURE__*/_jsxs(PasswordInputContainer,{children:[/*#__PURE__*/_jsx(PasswordInput,{type:showPassword?'text':'password',placeholder:\"\\uD604\\uC7AC \\uBE44\\uBC00\\uBC88\\uD638\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(ShowPasswordIcon,{onClick:function onClick(){return setShowPassword(!showPassword);},children:showPassword?'🙈':'👁️'})]}),/*#__PURE__*/_jsxs(PasswordInputContainer,{children:[/*#__PURE__*/_jsx(PasswordInput,{type:showPassword?'text':'password',placeholder:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",value:newPassword,onChange:function onChange(e){return setNewPassword(e.target.value);}}),/*#__PURE__*/_jsx(ShowPasswordIcon,{onClick:function onClick(){return setShowPassword(!showPassword);},children:showPassword?'🙈':'👁️'})]}),/*#__PURE__*/_jsxs(PasswordInputContainer,{children:[/*#__PURE__*/_jsx(PasswordInput,{type:showPassword?'text':'password',placeholder:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",value:confirmNewPassword,onChange:function onChange(e){return setConfirmNewPassword(e.target.value);}}),/*#__PURE__*/_jsx(ShowPasswordIcon,{onClick:function onClick(){return setShowPassword(!showPassword);},children:showPassword?'🙈':'👁️'})]}),/*#__PURE__*/_jsx(RequirementText,{children:\"* \\uBE44\\uBC00\\uBC88\\uD638 \\uC694\\uAC74: 8\\uC790 \\uC774\\uC0C1, \\uB300\\uBB38\\uC790, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790\\uB97C \\uD3EC\\uD568\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(SubmitButton,{onClick:handleSubmit,children:\"\\uB4F1\\uB85D\"})]});};export default PasswordChange;//서버의 로직 연동해서 수정\n// // ... (이전 코드 부분은 변경되지 않음)\n// const PasswordChange = () => {\n//     const [password, setPassword] = useState('');\n//     const [newPassword, setNewPassword] = useState('');\n//     const [confirmNewPassword, setConfirmNewPassword] = useState('');\n//     const [showPassword, setShowPassword] = useState(false);\n//     const [userDataArray, setUserDataArray] = useState([]);\n//     const [warningMessage, setWarningMessage] = useState('');\n//     const handleSubmit = () => {\n//       // 등록 버튼을 눌렀을 때 처리하는 로직 추가\n//       // 현재 비밀번호 확인\n//       const currentUser = userDataArray.find(user => user.id === 1); // 예시로 사용자 ID가 1인 경우를 가정\n//       if (currentUser && currentUser.password === password) {\n//         // 현재 비밀번호가 서버에 저장된 비밀번호와 일치하는 경우\n//         alert('수정되었습니다.');\n//         setWarningMessage(''); // 경고 메시지 초기화\n//       } else {\n//         // 현재 비밀번호가 서버에 저장된 비밀번호와 일치하지 않는 경우\n//         setWarningMessage('현재 비밀번호가 일치하지 않습니다.');\n//       }\n//     };\n//     useEffect(() => {\n//       const fetchData = () => {\n//         fetch('https://cors-anywhere.herokuapp.com/https://port-0-buife-5mk12alp6foaqx.sel5.cloudtype.app/members')\n//           .then(response => {\n//             if (!response.ok) {\n//               throw new Error('Network response was not ok');\n//             }\n//             return response.json();\n//           })\n//           .then(data => {\n//             console.log(`받아온 데이터:`, data);\n//             setUserDataArray(data);\n//           })\n//           .catch(error => {\n//             console.error('Error fetching user data:', error);\n//           });\n//       };\n//       fetchData();\n//     }, []);\n//     return (\n//       <PasswordChangeContainer>\n//         <h2>비밀번호 변경</h2>\n//         {warningMessage && <p style={{ color: 'red' }}>{warningMessage}</p>}\n//         {/* 나머지 코드는 변경되지 않음 */}\n//       </PasswordChangeContainer>\n//     );\n//   };\n//   export default PasswordChange;","map":{"version":3,"names":["React","useState","useEffect","styled","jsx","_jsx","jsxs","_jsxs","PasswordChangeContainer","div","_templateObject","_taggedTemplateLiteral","PasswordInputContainer","_templateObject2","PasswordInput","input","_templateObject3","ShowPasswordIcon","span","_templateObject4","RequirementText","p","_templateObject5","SubmitButton","button","_templateObject6","PasswordChange","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","newPassword","setNewPassword","_useState5","_useState6","confirmNewPassword","setConfirmNewPassword","_useState7","_useState8","showPassword","setShowPassword","handleSubmit","alert","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/82102/Documents/GitHub/WAP-2/src/pages/PasswordChange.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n    const PasswordChangeContainer = styled.div`\r\n    text-align: center;\r\n    padding-top: 10px;\r\n    padding-bottom:20px;\r\n    `;\r\n\r\n    const PasswordInputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    `;\r\n\r\n    const PasswordInput = styled.input`\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    width: 15%;\r\n    `;\r\n\r\n    const ShowPasswordIcon = styled.span`\r\n    position: relative;\r\n    top: -36.5px;\r\n    left: 120px;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    color: #777;\r\n    transition: color 0.3s;\r\n\r\n    &:hover {\r\n    color: #488AEE;\r\n    }\r\n    `;\r\n\r\n    const RequirementText = styled.p`\r\n    font-size: 12px;\r\n    color: #777;\r\n    `;\r\n\r\n    const SubmitButton = styled.button`\r\n    background-color: #488AEE;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    `;\r\n\r\n    const PasswordChange = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleSubmit = () => {\r\n    // 등록 버튼을 눌렀을 때 처리하는 로직 추가\r\n    alert('수정되었습니다.');\r\n    };\r\n    // const [userDataArray, setUserDataArray] = useState([]);\r\n\r\n    //     useEffect(() => {\r\n    //     const fetchData = () => {\r\n    //         fetch('https://cors-anywhere.herokuapp.com/https://port-0-buife-5mk12alp6foaqx.sel5.cloudtype.app/members')\r\n    //         .then(response => {\r\n    //             if (!response.ok) {\r\n    //             throw new Error('Network response was not ok');\r\n    //             }\r\n    //             return response.json();\r\n    //         })\r\n    //         .then(data => {\r\n    //             console.log(`받아온 데이터:`, data); //정상 동작 확인 완료\r\n    //             setUserDataArray(data); // 전체 데이터 배열을 가져옴\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.error('Error fetching user data:', error);\r\n    //         });\r\n    //     };\r\n\r\n    //     fetchData();\r\n    //     }, []);\r\n\r\n    return (\r\n    <PasswordChangeContainer>\r\n        <h2>비밀번호 변경</h2>\r\n        <PasswordInputContainer>\r\n        <PasswordInput\r\n            type={showPassword ? 'text' : 'password'}\r\n            placeholder=\"현재 비밀번호\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <ShowPasswordIcon onClick={() => setShowPassword(!showPassword)}>\r\n            {showPassword ? '🙈' : '👁️'}\r\n        </ShowPasswordIcon>\r\n        </PasswordInputContainer>\r\n        <PasswordInputContainer>\r\n        <PasswordInput\r\n            type={showPassword ? 'text' : 'password'}\r\n            placeholder=\"새 비밀번호\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <ShowPasswordIcon onClick={() => setShowPassword(!showPassword)}>\r\n            {showPassword ? '🙈' : '👁️'}\r\n        </ShowPasswordIcon>\r\n        </PasswordInputContainer>\r\n        <PasswordInputContainer>\r\n        <PasswordInput\r\n            type={showPassword ? 'text' : 'password'}\r\n            placeholder=\"새 비밀번호 확인\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n        />\r\n        <ShowPasswordIcon onClick={() => setShowPassword(!showPassword)}>\r\n            {showPassword ? '🙈' : '👁️'}\r\n        </ShowPasswordIcon>\r\n        </PasswordInputContainer>\r\n        <RequirementText>\r\n        * 비밀번호 요건: 8자 이상, 대문자, 숫자, 특수문자를 포함해야 합니다.\r\n        </RequirementText>\r\n        <SubmitButton onClick={handleSubmit}>등록</SubmitButton>\r\n    </PasswordChangeContainer>\r\n    );\r\n    };\r\n\r\nexport default PasswordChange;\r\n\r\n//서버의 로직 연동해서 수정\r\n\r\n// // ... (이전 코드 부분은 변경되지 않음)\r\n\r\n// const PasswordChange = () => {\r\n//     const [password, setPassword] = useState('');\r\n//     const [newPassword, setNewPassword] = useState('');\r\n//     const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n//     const [showPassword, setShowPassword] = useState(false);\r\n//     const [userDataArray, setUserDataArray] = useState([]);\r\n//     const [warningMessage, setWarningMessage] = useState('');\r\n  \r\n//     const handleSubmit = () => {\r\n//       // 등록 버튼을 눌렀을 때 처리하는 로직 추가\r\n//       // 현재 비밀번호 확인\r\n//       const currentUser = userDataArray.find(user => user.id === 1); // 예시로 사용자 ID가 1인 경우를 가정\r\n//       if (currentUser && currentUser.password === password) {\r\n//         // 현재 비밀번호가 서버에 저장된 비밀번호와 일치하는 경우\r\n//         alert('수정되었습니다.');\r\n//         setWarningMessage(''); // 경고 메시지 초기화\r\n//       } else {\r\n//         // 현재 비밀번호가 서버에 저장된 비밀번호와 일치하지 않는 경우\r\n//         setWarningMessage('현재 비밀번호가 일치하지 않습니다.');\r\n//       }\r\n//     };\r\n  \r\n//     useEffect(() => {\r\n//       const fetchData = () => {\r\n//         fetch('https://cors-anywhere.herokuapp.com/https://port-0-buife-5mk12alp6foaqx.sel5.cloudtype.app/members')\r\n//           .then(response => {\r\n//             if (!response.ok) {\r\n//               throw new Error('Network response was not ok');\r\n//             }\r\n//             return response.json();\r\n//           })\r\n//           .then(data => {\r\n//             console.log(`받아온 데이터:`, data);\r\n//             setUserDataArray(data);\r\n//           })\r\n//           .catch(error => {\r\n//             console.error('Error fetching user data:', error);\r\n//           });\r\n//       };\r\n  \r\n//       fetchData();\r\n//     }, []);\r\n  \r\n//     return (\r\n//       <PasswordChangeContainer>\r\n//         <h2>비밀번호 변경</h2>\r\n//         {warningMessage && <p style={{ color: 'red' }}>{warningMessage}</p>}\r\n//         {/* 나머지 코드는 변경되지 않음 */}\r\n//       </PasswordChangeContainer>\r\n//     );\r\n//   };\r\n  \r\n//   export default PasswordChange;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}