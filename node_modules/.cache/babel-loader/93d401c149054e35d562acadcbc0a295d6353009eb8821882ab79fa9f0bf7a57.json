{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82102\\\\Documents\\\\GitHub\\\\WAP-2\\\\src\\\\pages\\\\FilterComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterComponent = () => {\n  _s();\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedRegions, setSelectedRegions] = useState([]);\n  const regions = [\"남구\", \"수영구\", \"북구\", \"진구\"]; // 여기에 필요한 지역구 목록을 추가하세요\n\n  const handleRegionClick = () => {\n    setShowOptions(!showOptions);\n  };\n  const handleRegionToggle = region => {\n    if (selectedRegions.includes(region)) {\n      setSelectedRegions(selectedRegions.filter(item => item !== region));\n    } else {\n      setSelectedRegions([...selectedRegions, region]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginBottom: '10px',\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      onClick: handleRegionClick,\n      children: [\"\\uC9C0\\uC5ED \", showOptions ? '닫기' : '열기']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [regions.map(region => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: region,\n          checked: selectedRegions.includes(region),\n          onChange: () => handleRegionToggle(region)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), region]\n      }, region, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC120\\uD0DD\\uB41C \\uC9C0\\uC5ED: \", selectedRegions.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterComponent, \"E2QtGO2XTMNtrVzEDcCsWbLmt84=\");\n_c = FilterComponent;\nexport default FilterComponent;\nvar _c;\n$RefreshReg$(_c, \"FilterComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FilterComponent","_s","showOptions","setShowOptions","selectedRegions","setSelectedRegions","regions","handleRegionClick","handleRegionToggle","region","includes","filter","item","children","style","border","padding","marginBottom","cursor","display","justifyContent","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","checked","onChange","join","_c","$RefreshReg$"],"sources":["C:/Users/82102/Documents/GitHub/WAP-2/src/pages/FilterComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FilterComponent = () => {\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [selectedRegions, setSelectedRegions] = useState([]);\r\n\r\n  const regions = [\"남구\", \"수영구\", \"북구\", \"진구\"]; // 여기에 필요한 지역구 목록을 추가하세요\r\n\r\n  const handleRegionClick = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  const handleRegionToggle = (region) => {\r\n    if (selectedRegions.includes(region)) {\r\n      setSelectedRegions(selectedRegions.filter((item) => item !== region));\r\n    } else {\r\n      setSelectedRegions([...selectedRegions, region]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '10px', cursor: 'pointer',display: 'flex', justifyContent: 'center'}} onClick={handleRegionClick}>\r\n        지역 {showOptions ? '닫기' : '열기'}\r\n      </div>\r\n      {showOptions && (\r\n        <div>\r\n          {regions.map((region) => (\r\n            <label key={region}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={region}\r\n                checked={selectedRegions.includes(region)}\r\n                onChange={() => handleRegionToggle(region)}\r\n              />\r\n              {region}\r\n            </label>\r\n          ))}\r\n          <p>선택된 지역: {selectedRegions.join(\", \")}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMS,OAAO,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;;EAE3C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BJ,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMM,kBAAkB,GAAIC,MAAM,IAAK;IACrC,IAAIL,eAAe,CAACM,QAAQ,CAACD,MAAM,CAAC,EAAE;MACpCJ,kBAAkB,CAACD,eAAe,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,MAAM,CAAC,CAAC;IACvE,CAAC,MAAM;MACLJ,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEK,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAKe,KAAK,EAAE;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,MAAM;QAAEC,MAAM,EAAE,SAAS;QAACC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAQ,CAAE;MAACC,OAAO,EAAEd,iBAAkB;MAAAM,QAAA,GAAC,eACpK,EAACX,WAAW,GAAG,IAAI,GAAG,IAAI;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACLvB,WAAW,iBACVH,OAAA;MAAAc,QAAA,GACGP,OAAO,CAACoB,GAAG,CAAEjB,MAAM,iBAClBV,OAAA;QAAAc,QAAA,gBACEd,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEnB,MAAO;UACdoB,OAAO,EAAEzB,eAAe,CAACM,QAAQ,CAACD,MAAM,CAAE;UAC1CqB,QAAQ,EAAEA,CAAA,KAAMtB,kBAAkB,CAACC,MAAM;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,EACDhB,MAAM;MAAA,GAPGA,MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACR,CAAC,eACF1B,OAAA;QAAAc,QAAA,GAAG,mCAAQ,EAACT,eAAe,CAAC2B,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzCID,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}