{"ast":null,"code":"import _slicedToArray from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/82102/Documents/GitHub/WAP-2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;//     // import React from 'react';\n//     import styled from 'styled-components';\n//     import React, { useState, useEffect } from 'react';\n//     const InfoContainer = styled.div`\n//     text-align: center;\n//     margin-bottom: 20px;\n//     `;\n//     const InfoItem = styled.div`\n//     margin-bottom: 10px;\n//     `;\n//     // \n//     // ... (이전 코드 부분은 변경되지 않음)\n// const MyPageInfo = () => {\n//     const [userDataArray, setUserDataArray] = useState([]);\n//     const loggedInUserId = 'donggunmaru@gmail.com'; // 예시로 로그인된 사용자 ID가 1인 경우를 가정\n//     useEffect(() => {\n//       const fetchData = () => {\n//         fetch('https://cors-anywhere.herokuapp.com/https://port-0-buife-5mk12alp6foaqx.sel5.cloudtype.app/members')\n//           .then(response => {\n//             if (!response.ok) {\n//               throw new Error('Network response was not ok');\n//             }\n//             return response.json();\n//           })\n//           .then(data => {\n//             console.log(`받아온 데이터:`, data);\n//             setUserDataArray(data); // 전체 데이터 배열을 가져옴\n//           })\n//           .catch(error => {\n//             console.error('Error fetching user data:', error);\n//           });\n//       };\n//       fetchData();\n//     }, []);\n//     // 로그인된 사용자의 정보만 필터링\n//     const loggedInUserInfo = userDataArray.find(user => user.userID === loggedInUserId);\n//     return (\n//       <InfoContainer>\n//         <h2>임시 기본 정보</h2>\n//         {loggedInUserInfo && (\n//           <div>\n//             <InfoItem>{loggedInUserInfo.userID}</InfoItem>\n//             <InfoItem>{loggedInUserInfo.userBirth}</InfoItem>\n//             <InfoItem>{loggedInUserInfo.userName}</InfoItem>\n//             <InfoItem>{loggedInUserInfo.userGender}</InfoItem>\n//           </div>\n//         )}\n//       </InfoContainer>\n//     );\n//   };\n//   export default MyPageInfo;\n// import React from 'react';\nimport styled from'styled-components';import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n text-align: center;\\n margin-bottom: 20px;\\n \"])));var InfoItem=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n margin-bottom: 10px;\\n \"])));var MyPageInfo=function MyPageInfo(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];useEffect(function(){var fetchData=function fetchData(){fetch('https://port-0-server-cloudtype-4fju66f2clmyxbee6.sel5.cloudtype.app/mypage',{credentials:'include'}).then(function(response){if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(function(data){console.log(\"\\uBC1B\\uC544\\uC628 \\uB370\\uC774\\uD130:\",data);//정상 동작 확인 완료\nsetUserData(data);// 전체 데이터 배열을 가져옴\n}).catch(function(error){console.error('Error fetching user data:',error);});};fetchData();},[]);return/*#__PURE__*/_jsxs(InfoContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC784\\uC2DC \\uAE30\\uBCF8 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(InfoItem,{children:userData.userID}),/*#__PURE__*/_jsx(InfoItem,{children:userData.userBirth}),/*#__PURE__*/_jsx(InfoItem,{children:userData.userName}),/*#__PURE__*/_jsx(InfoItem,{children:userData.userGender}),/*#__PURE__*/_jsx(InfoItem,{children:userData.userRating})]});};export default MyPageInfo;","map":{"version":3,"names":["styled","React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","InfoContainer","div","_templateObject","_taggedTemplateLiteral","InfoItem","_templateObject2","MyPageInfo","_useState","_useState2","_slicedToArray","userData","setUserData","fetchData","fetch","credentials","then","response","ok","Error","json","data","console","log","catch","error","children","userID","userBirth","userName","userGender","userRating"],"sources":["C:/Users/82102/Documents/GitHub/WAP-2/src/pages/mypage-info.js"],"sourcesContent":["//     // import React from 'react';\r\n//     import styled from 'styled-components';\r\n//     import React, { useState, useEffect } from 'react';\r\n\r\n//     const InfoContainer = styled.div`\r\n//     text-align: center;\r\n//     margin-bottom: 20px;\r\n//     `;\r\n//     const InfoItem = styled.div`\r\n//     margin-bottom: 10px;\r\n//     `;\r\n\r\n//     // \r\n    \r\n//     // ... (이전 코드 부분은 변경되지 않음)\r\n\r\n// const MyPageInfo = () => {\r\n//     const [userDataArray, setUserDataArray] = useState([]);\r\n//     const loggedInUserId = 'donggunmaru@gmail.com'; // 예시로 로그인된 사용자 ID가 1인 경우를 가정\r\n  \r\n//     useEffect(() => {\r\n//       const fetchData = () => {\r\n//         fetch('https://cors-anywhere.herokuapp.com/https://port-0-buife-5mk12alp6foaqx.sel5.cloudtype.app/members')\r\n//           .then(response => {\r\n//             if (!response.ok) {\r\n//               throw new Error('Network response was not ok');\r\n//             }\r\n//             return response.json();\r\n//           })\r\n//           .then(data => {\r\n//             console.log(`받아온 데이터:`, data);\r\n//             setUserDataArray(data); // 전체 데이터 배열을 가져옴\r\n//           })\r\n//           .catch(error => {\r\n//             console.error('Error fetching user data:', error);\r\n//           });\r\n//       };\r\n  \r\n//       fetchData();\r\n//     }, []);\r\n  \r\n//     // 로그인된 사용자의 정보만 필터링\r\n//     const loggedInUserInfo = userDataArray.find(user => user.userID === loggedInUserId);\r\n  \r\n//     return (\r\n//       <InfoContainer>\r\n//         <h2>임시 기본 정보</h2>\r\n//         {loggedInUserInfo && (\r\n//           <div>\r\n//             <InfoItem>{loggedInUserInfo.userID}</InfoItem>\r\n//             <InfoItem>{loggedInUserInfo.userBirth}</InfoItem>\r\n//             <InfoItem>{loggedInUserInfo.userName}</InfoItem>\r\n//             <InfoItem>{loggedInUserInfo.userGender}</InfoItem>\r\n//           </div>\r\n//         )}\r\n//       </InfoContainer>\r\n//     );\r\n//   };\r\n  \r\n//   export default MyPageInfo;\r\n  \r\n\r\n // import React from 'react';\r\n import styled from 'styled-components';\r\n import React, { useState, useEffect } from 'react';\r\n\r\n const InfoContainer = styled.div`\r\n text-align: center;\r\n margin-bottom: 20px;\r\n `;\r\n const InfoItem = styled.div`\r\n margin-bottom: 10px;\r\n `;\r\n\r\n const MyPageInfo = () => {\r\n     const [userData, setUserData] = useState([]);\r\n\r\n     useEffect(() => {\r\n     const fetchData = () => {\r\n         fetch('https://port-0-server-cloudtype-4fju66f2clmyxbee6.sel5.cloudtype.app/mypage',\r\n         {\r\n            credentials : 'include'\r\n         })\r\n         .then(response => {\r\n             if (!response.ok) {\r\n             throw new Error('Network response was not ok');\r\n             }\r\n             return response.json();\r\n         })\r\n         .then(data => {\r\n             console.log(`받아온 데이터:`, data); //정상 동작 확인 완료\r\n             setUserData(data); // 전체 데이터 배열을 가져옴\r\n         })\r\n         .catch(error => {\r\n             console.error('Error fetching user data:', error);\r\n         });\r\n     };\r\n\r\n     fetchData();\r\n     }, []);\r\n\r\n return (\r\n <InfoContainer>\r\n     <h2>임시 기본 정보</h2>\r\n         <InfoItem>{userData.userID}</InfoItem>\r\n         <InfoItem>{userData.userBirth}</InfoItem>\r\n         <InfoItem>{userData.userName}</InfoItem>\r\n         <InfoItem>{userData.userGender}</InfoItem>\r\n         <InfoItem>{userData.userRating}</InfoItem>\r\n\r\n     \r\n </InfoContainer>\r\n\r\n \r\n );\r\n };\r\n\r\n export default MyPageInfo;"],"mappings":"2SAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGC;AACA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,GAAM,CAAAC,aAAa,CAAGR,MAAM,CAACS,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,wDAG/B,CACD,GAAM,CAAAC,QAAQ,CAAGZ,MAAM,CAACS,GAAG,CAAAI,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,kCAE1B,CAED,GAAM,CAAAG,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACrB,IAAAC,SAAA,CAAgCb,QAAQ,CAAC,EAAE,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAE5Bb,SAAS,CAAC,UAAM,CAChB,GAAM,CAAAiB,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACpBC,KAAK,CAAC,6EAA6E,CACnF,CACGC,WAAW,CAAG,SACjB,CAAC,CAAC,CACDC,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACd,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CAClB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAC9C,CACA,MAAO,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDJ,IAAI,CAAC,SAAAK,IAAI,CAAI,CACVC,OAAO,CAACC,GAAG,0CAAaF,IAAI,CAAC,CAAE;AAC/BT,WAAW,CAACS,IAAI,CAAC,CAAE;AACvB,CAAC,CAAC,CACDG,KAAK,CAAC,SAAAC,KAAK,CAAI,CACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACrD,CAAC,CAAC,CACN,CAAC,CAEDZ,SAAS,CAAC,CAAC,CACX,CAAC,CAAE,EAAE,CAAC,CAEV,mBACAb,KAAA,CAACC,aAAa,EAAAyB,QAAA,eACV5B,IAAA,OAAA4B,QAAA,CAAI,wCAAQ,CAAI,CAAC,cACb5B,IAAA,CAACO,QAAQ,EAAAqB,QAAA,CAAEf,QAAQ,CAACgB,MAAM,CAAW,CAAC,cACtC7B,IAAA,CAACO,QAAQ,EAAAqB,QAAA,CAAEf,QAAQ,CAACiB,SAAS,CAAW,CAAC,cACzC9B,IAAA,CAACO,QAAQ,EAAAqB,QAAA,CAAEf,QAAQ,CAACkB,QAAQ,CAAW,CAAC,cACxC/B,IAAA,CAACO,QAAQ,EAAAqB,QAAA,CAAEf,QAAQ,CAACmB,UAAU,CAAW,CAAC,cAC1ChC,IAAA,CAACO,QAAQ,EAAAqB,QAAA,CAAEf,QAAQ,CAACoB,UAAU,CAAW,CAAC,EAGnC,CAAC,CAIhB,CAAC,CAED,cAAe,CAAAxB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}